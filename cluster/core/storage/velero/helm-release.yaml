---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: velero
  namespace: velero
spec:
  interval: 5m
  chart:
    spec:
      chart: velero
      sourceRef:
        kind: HelmRepository
        name: vmware-tanzu
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    # Details of the container image to use in the Velero deployment & daemonset (if
    # enabling restic). Required.
    image:
      repository: velero/velero
      tag: v1.10.0
      pullPolicy: IfNotPresent

    # Annotations to add to the Velero deployment's. Optional.
    # If you are using reloader use the following annotation with your VELERO_SECRET_NAME
    annotations: {}
    # secret.reloader.stakater.com/reload: "<VELERO_SECRET_NAME>"
    
    # Labels to add to the Velero deployment's. Optional.
    labels: {}

    # Init containers to add to the Velero deployment's pod spec. At least one plugin provider image is required.
    # If the value is a string then it is evaluated as a template.
    initContainers:
       - name: velero-plugin-for-aws
         image: velero/velero-plugin-for-aws:v1.6.0
         imagePullPolicy: IfNotPresent
         volumeMounts:
           - mountPath: /target
             name: plugins
  
    # Backup schedules to create.
    # Eg:
    # schedules:
    #   mybackup:
    #     disabled: false
    #     labels:
    #       myenv: foo
    #     annotations:
    #       myenv: foo
    #     schedule: "0 0 * * *"
    #     useOwnerReferencesInBackup: false
    #     template:
    #       ttl: "240h"
    #       includedNamespaces:
    #       - foo
    schedules: {}

    # Velero ConfigMaps.
    # Eg:
    # configMaps:
    #   restic-restore-action-config:
    #     labels:
    #       velero.io/plugin-config: ""
    #       velero.io/restic: RestoreItemAction
    #     data:
    #       image: velero/velero-restic-restore-helper:v1.9.0
    configMaps: {}
      
    ##
    ## Parameters for the `default` BackupStorageLocation and VolumeSnapshotLocation,
    ## and additional server settings.
    ##
    configuration:
      # Cloud provider being used (e.g. aws, azure, gcp).
      provider: aws
    
      # Parameters for the `default` BackupStorageLocation. See
      # https://velero.io/docs/v1.6/api-types/backupstoragelocation/
      backupStorageLocation:
        # name is the name of the backup storage location where backups should be stored. If a name is not provided,
        # a backup storage location will be created with the name "default". Optional.
        name: default
        # provider is the name for the backup storage location provider. If omitted
        # `configuration.provider` will be used instead.
        provider: aws
        # bucket is the name of the bucket to store backups in. Required.
        bucket: velero-8pgiwcwgx
        # caCert defines a base64 encoded CA bundle to use when verifying TLS connections to the provider. Optional.
        #caCert:
        # prefix is the directory under which all Velero data should be stored within the bucket. Optional.
        prefix: backup
        # default indicates this location is the default backup storage location. Optional.
        #default:
        # accessMode determines if velero can write to this backup storage location. Optional.
        # default to ReadWrite, ReadOnly is used during migrations and restores.
        accessMode: ReadWrite
        # Additional provider-specific configuration. See link above
        # for details of required/optional fields for your provider.
        config:
          region: minio
          s3ForcePathStyle: true
          s3Url: http://192.168.0.120:9000
        #  kmsKeyId:
        #  resourceGroup:
    
      # Parameters for the `default` VolumeSnapshotLocation. See
      # https://velero.io/docs/v1.6/api-types/volumesnapshotlocation/
      volumeSnapshotLocation:
        # name is the name of the volume snapshot location where snapshots are being taken. Required.
        name: default
        # provider is the name for the volume snapshot provider. If omitted
        # `configuration.provider` will be used instead.
        #provider: aws
        # Additional provider-specific configuration. See link above
        # for details of required/optional fields for your provider.
        config: 
          region: minio
          #apiTimeout: 
            #resourceGroup:
          # The ID of the subscription where volume snapshots should be stored, if different from the clusterâ€™s subscription. If specified, also requires `configuration.volumeSnapshotLocation.config.resourceGroup`to be set. (Azure only)
          #subscriptionId:
          #incremental:
          #snapshotLocation:
          #project:

    # Info about the secret to be used by the Velero deployment, which
    # should contain credentials for the cloud provider IAM account you've
    # set up for Velero.
    credentials:
      # Whether a secret should be used. Set to false if, for examples:
      # - using kube2iam or kiam to provide AWS IAM credentials instead of providing the key file. (AWS only)
      # - using workload identity instead of providing the key file. (GCP only)
      useSecret: true
      # Name of the secret to create if `useSecret` is true and `existingSecret` is empty
      #name:
      # Name of a pre-existing secret (if any) in the Velero namespace
      # that should be used to get IAM account credentials. Optional.
      existingSecret: velero-minio-secret
      # Data to be stored in the Velero secret, if `useSecret` is true and `existingSecret` is empty.
      # As of the current Velero release, Velero only uses one secret key/value at a time.
      # The key must be named `cloud`, and the value corresponds to the entire content of your IAM credentials file.
      # Note that the format will be different for different providers, please check their documentation.
      # Here is a list of documentation for plugins maintained by the Velero team:
      # [AWS] https://github.com/vmware-tanzu/velero-plugin-for-aws/blob/main/README.md
      # [GCP] https://github.com/vmware-tanzu/velero-plugin-for-gcp/blob/main/README.md
      # [Azure] https://github.com/vmware-tanzu/velero-plugin-for-microsoft-azure/blob/main/README.md
      secretContents: {}
      #  cloud: |
      #    [default]
      #    aws_access_key_id=<REDACTED>
      #    aws_secret_access_key=<REDACTED>
      # additional key/value pairs to be used as environment variables such as "DIGITALOCEAN_TOKEN: <your-key>". Values will be stored in the secret.
      extraEnvVars: {}
      # Name of a pre-existing secret (if any) in the Velero namespace
      # that will be used to load environment variables into velero and restic.
      # Secret should be in format - https://kubernetes.io/docs/concepts/configuration/secret/#use-case-as-container-environment-variables
      extraSecretRef: ""
       
    # Whether to deploy the restic daemonset.
    deployRestic: true

    restic:
      podVolumePath: /var/lib/kubelet/pods
      privileged: false
      # Pod priority class name to use for the Restic daemonset. Optional.
      priorityClassName: ""
      # Resource requests/limits to specify for the Restic daemonset deployment. Optional.
      # https://velero.io/docs/v1.6/customize-installation/#customize-resource-requests-and-limits
      resources:
        requests:
          cpu: 500m
          memory: 512Mi
        limits:
          cpu: 1000m
          memory: 1024Mi
      # Tolerations to use for the Restic daemonset. Optional.
      tolerations: []
      # Annotations to set for the Restic daemonset. Optional.
      annotations: {}
      # labels to set for the Restic daemonset. Optional.
      labels: {}
