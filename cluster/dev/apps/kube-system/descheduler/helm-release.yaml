apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &appname descheduler
  namespace: kube-system

spec:
  releaseName: *appname
  chart:
    spec:
      chart: *appname 
      sourceRef:
        kind: HelmRepository
        name: descheduler-charts
        namespace: flux-system
  interval: 5m
  values:
    # CronJob or Deployment
    kind: Deployment
    
    image:
      repository: registry.k8s.io/descheduler/descheduler
      # Overrides the image tag whose default is the chart version
      tag: ""
      pullPolicy: Always
    
    imagePullSecrets:
    #   - name: container-registry-secret
    
    resources:
      requests:
        cpu: 500m
        memory: 256Mi
    
    deschedulingInterval: 60m
    
    # Specifies the replica count for Deployment
    # Set leaderElection if you want to use more than 1 replica
    # Set affinity.podAntiAffinity rule if you want to schedule onto a node
    # only if that node is in the same zone as at least one already-running descheduler
    replicas: 1
    
    # Specifies whether Leader Election resources should be created
    # Required when running as a Deployment
    leaderElection: 
      enabled: true
      leaseDuration: 15s
      renewDeadline: 10s
      retryPeriod: 2s
      resourceLock: "leases"
      resourceName: "descheduler"
      resourceNamescape: "kube-system"
    
    cmdOptions:
      v: 3
    
    deschedulerPolicy:
      # nodeSelector: "key1=value1,key2=value2"
      # maxNoOfPodsToEvictPerNode: 10
      # maxNoOfPodsToEvictPerNamespace: 10
      # ignorePvcPods: true
      # evictLocalStoragePods: true
      strategies:
        RemoveDuplicates:
          enabled: true
        RemovePodsViolatingNodeTaints:
          enabled: true
        RemovePodsViolatingNodeAffinity:
          enabled: true
          params:
            nodeAffinityType:
            - requiredDuringSchedulingIgnoredDuringExecution
        RemovePodsViolatingInterPodAntiAffinity:
          enabled: true
        LowNodeUtilization:
          enabled: true
          params:
            nodeResourceUtilizationThresholds:
              thresholds:
                cpu: 50
                memory: 50
                pods: 20
              targetThresholds:
                cpu: 70
                memory: 70
                pods: 50 
        RemoveFailedPods:
          enabled: true
          params:
            failedPods:
              includingInitContainers: true
              excludeOwnerKinds: ["Job"]
              minPodLifetimeSeconds: 3600
        RemovePodsHavingTooManyRestarts:
          podRestartThreshold: 10
          includingInitContainers: true
        PodLifeTime:
          maxPodLifetimeSeconds: 604800
          #states: Containercreating

    
    priorityClassName: system-cluster-critical
    
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
    
    affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: kubernetes.io/e2e-az-name
    #         operator: In
    #         values:
    #         - e2e-az1
    #         - e2e-az2
    #  podAntiAffinity:
    #    requiredDuringSchedulingIgnoredDuringExecution:
    #      - labelSelector:
    #          matchExpressions:
    #            - key: app.kubernetes.io/name
    #              operator: In
    #              values:
    #                - descheduler
    #        topologyKey: "kubernetes.io/hostname"
    tolerations: []
    # - key: 'management'
    #   operator: 'Equal'
    #   value: 'tool'
    #   effect: 'NoSchedule'
    
    rbac:
      create: true
    
    podSecurityPolicy:
      create: true
    
    serviceAccount:
      create: true
    
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 10258
        scheme: HTTPS
      initialDelaySeconds: 3
      periodSeconds: 10
    
    service:
      enabled: false
    
    serviceMonitor:
      enabled: true
      interval: ""
      insecureSkipVerify: true
      serverName: null
      metricRelabelings: []
        # - action: keep
        #   regex: 'descheduler_(build_info|pods_evicted)'
        #   sourceLabels: [__name__]
      relabelings: []
        # - sourceLabels: [__meta_kubernetes_pod_node_name]
        #   separator: ;
        #   regex: ^(.*)$
        #   targetLabel: nodename
        #   replacement: $1
        #   action: replace
