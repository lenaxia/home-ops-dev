---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/onedr0p/jellyfin
      tag: 10.8.10@sha256:1ef614db6a4c589777eb48bc9004d573b9c09f0d6d573a509041c6060f3a956b
    env:
      TZ: America/New_York
    service:
      main:
        type: LoadBalancer
        externalIPs: ["${SVC_JELLYFIN_ADDR}"]
        externalTrafficPolicy: Local
        ports:
          http:
            port: 8096
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "television-box"
          hajimari.io/group: "Media"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
        hosts:
          - host: &uri "jelly.${SECRET_DEV_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *uri
            secretName: *uri
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups: [44, 109, 10000]
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 10Gi
        storageClass: longhorn
        labels:
          snapshot.home.arpa/enabled: "true"
    persistence:
      omoikane:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume1/omoikane
        mountPath: /omoikane
      downloads:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume2/downloads
        mountPath: /downloads
      transcode:
        enabled: true
        type: emptyDir
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
        #      intel.feature.node.kubernetes.io/gpu: "true"
        #    resources:
        #      requests:
        #        gpu.intel.com/i915: 1
        #        cpu: 100m
        #        memory: 1000Mi
        #      limits:
        #        gpu.intel.com/i915: 1
        #        memory: 6000Mi
