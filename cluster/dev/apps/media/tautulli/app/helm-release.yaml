---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app tautulli
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      #repository: ghcr.io/linuxserver/tautulli
      repository: ghcr.io/onedr0p/tautulli
      tag: 2.12.4@sha256:d4b2306a6c34fdb82e8c1b2a61e71797a201664d7a7b0b602f8a524ef5e2b641 
      pullPolicy: Always
    env:
      TZ: "${TIMEZONE}"
      PUID: 1000
      PGID: 1000
    podAnnotations:
      k8s.v1.cni.cncf.io/networks: |
        [{
          "name":"multus-iot",
          "namespace": "networking",
          "ips": ["192.168.3.101/20"]
        }]
    service:
      main:
        type: LoadBalancer
        ports:
          http:
            port: &port 8181
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "chart-bar"
          hajimari.io/group: "Media"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
        hosts:
          - host: &uri "tautulli.${SECRET_DEV_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *uri
            secretName: *uri
    probes:
      liveness: &probes
        enabled: false
        custom: true
        spec:
          httpGet:
            path: /
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
    persistence:
      config:
        enabled: true
        existingClaim: tautulli-config-volume
      backups:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume1/backups/tautulli
        mountPath: /config/backups
 
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
#    resources:
#      requests:
#        cpu: 10m
#        memory: 50Mi
#      limits:
#        memory: 500Mi
