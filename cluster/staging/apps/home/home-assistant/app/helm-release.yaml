---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 4
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 4
  uninstall:
    keepHistory: false
  values:
    initContainers:
      init-db:
        image: ghcr.io/onedr0p/postgres-initdb:14.8
        env:
          - name: POSTGRES_SUPER_PASS
            valueFrom:
              secretKeyRef:
                name: postgres-superuser
                key: password
        envFrom:
          - secretRef:
              name: home-assistant-secret
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/onedr0p/home-assistant
      tag: 2023.6.0@sha256:2425d401ed8f5ae8fe864e15aee0545b0f764142592f532eaedd3c3fca485406
    podAnnotations:
      k8s.v1.cni.cncf.io/networks: macvlan-static-iot-hass
    env:
      TZ: ${TIMEZONE}
      POSTGRES_HOST: defaultpg-rw.default.svc.cluster.local
      POSTGRES_DB: home_assistant
    envFrom:
      - secretRef:
          name: home-assistant-secret
    service:
      main:
        type: ClusterIP
          #externalIPs: ["${SVC_HOME_ASSISTANT_ADDR}"]
          #externalTrafficPolicy: Local
        ports:
          http:
            port: 8123
    ingress:
      main:
        enabled: true
        ingressClassName: traefik
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          hajimari.io/enable: "true"
          hajimari.io/icon: home-assistant
          hajimari.io/group: "Home"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
        hosts:
          - host: &host hass.${SECRET_DEV_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: *host
    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 20Gi
        storageClass: longhorn
        labels:
          snapshot.home.arpa/enabled: "true"
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 750Mi
