apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &appname node-red
  namespace: home
spec:
  releaseName: *appname
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  interval: 5m
  values:
    image:
      repository: nodered/node-red
      tag: 3.0.2
      pullPolicy: Always
    lifecycle:
      postStart:
        exec:
          command:
            - /bin/bash
            - -c
            - >
              cp /package.json /data &&
              cp /settings.js /data &&
              cd /data &&
              npm install
    
    # -- environment variables.
    # @default -- See below
    env:
      # -- Set the container timezone
      TZ: "${TIMEZONE}"
      # -- Node.js runtime arguments
      NODE_OPTIONS:
      # -- Setting to `true` starts Node-RED with the projects feature enabled
      NODE_RED_ENABLE_PROJECTS:
      # -- Setting to `true` starts Node-RED in safe (not running) mode
      NODE_RED_ENABLE_SAFE_MODE:
      # -- Location of the flows configuration file.
      # If you set `FLOWS: ""` then the flow file can be set via the `flowFile` property in the `settings.js` file.
      FLOWS: flows.json
      NODE_RED_CREDENTIAL_SECRET:
        valueFrom:
          secretKeyRef:
            name: *appname
            key: credential-secret
    
    # -- Configures service settings for the chart.
    # @default -- See values.yaml
    service:
      main:
        ports:
          http:
            port: 1880
        type: ClusterIP
    
    persistence:
      data:
        enabled: true
        existingClaim: "nodered-config-volume"
      packagejson:
        enabled: true
        type: configMap
        name: packagejson
        subPath: package.json
        mountPath: /package.json
        defaultMode: 0644
      settingsjs:
        enabled: true
        type: configMap
        name: settingsjs
        subPath: settings.js
        mountPath: /settings.js
        defaultMode: 0644
      flowscredjson:
        enabled: false
        type: secret
        name: flowscredjson
        subPath: flows_cred.json
        mountPath: /flows_cred.json
        defaultMode: 0644

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        name: "Node-RED"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "resistor-nodes"
          hajimari.io/appName: "Node-RED"
          hajimari.io/group: "Home"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
        hosts:
          - host: &uri "nodered.${SECRET_DEV_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
            - *uri
            secretName: *uri
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
