---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app bazarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: linuxserver/bazarr
      tag: latest
      pullPolicy: Always
    env:
      TZ: "${TIMEZONE}"
      PUID: 911
      PGID: 1001
    podSecurityContext:
      runAsUser: 0
      runAsGroup: 0
      fsGroup: 1001
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
    lifecycle:
      postStart:
        exec:
          command:
            - /bin/bash
            - -c
            - /poststart.sh
    podAnnotations:
      configmap.reloader.stakater.com/reload: "bazarr-poststart-sh"
#    initContainers:
#      config-permissions:
#        image: busybox
#        imagePullPolicy: IfNotPresent
#        command:
#          - /bin/sh
#          - -c
#          - mv /data/config/config.ini.bak /data/config/config.ini
#        volumeMounts:
#          - name: config 
#            mountPath: /data
    service:
      main:
        ports:
          http:
            port: &port 6767
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "subtitles"
          hajimari.io/group: "Media"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
            ##cert-manager.io/cluster-issuer: "ca-issuer"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
        hosts:
          - host: &uri "bazarr.${SECRET_DEV_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *uri
            secretName: *uri
#    probes:
#      liveness: &probes
#        enabled: true
#        custom: true
#        spec:
#          httpGet:
#            path: /health
#            port: *port
#          initialDelaySeconds: 0
#          periodSeconds: 10
#          timeoutSeconds: 1
#          failureThreshold: 3
#      readiness: *probes
#      startup:
#        enabled: false
    persistence:
      config:
        enabled: true
        existingClaim: bazarr-config-volume
        readOnly: false
#      config-ini:
#        enabled: true
#        type: configMap
#        name: bazarr-config
#        subPath: config.ini
#        mountPath: /config/config/config.ini
#        defaultMode: 0666
      omoikane:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume1/omoikane
        mountPath: /omoikane
      downloads:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume2/downloads
        mountPath: /downloads
      backups:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume1/backups/bazarr
        mountPath: /backups
      poststart:
        enabled: true
        type: configMap
        name: bazarr-poststart-sh
        subPath: poststart.sh
        mountPath: /poststart.sh
        defaultMode: 0777
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
#    resources:
#      requests:
#        cpu: 10m
#        memory: 50Mi
#      limits:
#        memory: 500Mi
