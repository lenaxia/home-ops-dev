---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &appname calibre
  namespace: media
spec:
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  interval: 15m
  values:
    initContainers:
      update-volume-permission:
        image: busybox@sha256:478209e7be50e5f5c9fd47a6a71d43c119dd44c393160e49dc4bb86f99a439de
        command: ["sh", "-c", "chown -R 1000:1000 /config"]
        volumeMounts:
          - name: config
            mountPath: /config
        securityContext:
          runAsUser: 0
    image:
      repository: ghcr.io/linuxserver/calibre
      tag: version-v6.3.0
      pullPolicy: Always
    env:
      PGID: "65539"
      PUID: "1000"
      UMASK_SET: "022"
    service:
      main:
        ports:
          http:
            port: 8080
      webserver:
        enabled: true
        ports:
          webserver:
            enabled: true
            port: 8081
            protocol: TCP
            targetPort: 8081
        type: ClusterIP
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "bookshelf"
          hajimari.io/group: "Media"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-authelia@kubernetescrd
        hosts:
          - host: &uri "calibre.${SECRET_DEV_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *uri
            secretName: *uri
    persistence:
      config:
        enabled: true
        existingClaim: calibre-config-volume
      media:
        enabled: true
        existingClaim: calibre-media-volume 
        mountPath: /library
      omoikane:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume1/omoikane
        mountPath: /omoikane
      downloads:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: ${NAS_ADDR}
            path: /volume2/downloads
        mountPath: /downloads
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
    resources:
      requests:
        cpu: 15m
        memory: 298M
      limits:
        memory: 357M
