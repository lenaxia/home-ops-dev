apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app nextcloud
  namespace: &namespace storage
spec:
  interval: 15m
  chart:
    spec:
      chart: nextcloud
      version: 3.5.13
      sourceRef:
        kind: HelmRepository
        name: nextcloud-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 3 
  upgrade:
    remediation:
      retries: 5
  values:
    fullnameOverride: *app
    image:
      repository: nextcloud
      tag: 26.0.2-fpm-alpine
      flavor: fpm-alpine
    ingress:
      enabled: true
      className: traefik
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/icon: "cloud"
        hajimari.io/appName: "Nextcloud"
        hajimari.io/group: "Storage"
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: networking-chain-nextcloud-headers@kubernetescrd
      path: /
      pathType: Prefix

      tls:
        - hosts:
            - &host "hub.${SECRET_DEV_DOMAIN}"
          secretName: *host

    lifecycle:
      postStartCommand: ["/bin/sh","-c","apk add ffmpeg && apk add php81-pecl-apcu"]

    nextcloud:
      host: *host
      existingSecret:
        enabled: true
        secretName: nextcloud-config
        usernameKey: nextcloud-username
        passwordKey: nextcloud-password  # secretName: nameofsecret
      datadir: /var/www/data
      extraEnv:
        - name: REDIS_HOST_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
      extraSidecarContainers:
        #        - name: nextcloud-redis
        #          image: redis:7.0.7 
        #          command: 
        #            - "redis-server"
        #            - "/run/redis.conf"
        #          securityContext:
        #            runAsGroup: 82
        #            runAsUser: 82
        #          lifecycle:
        #            preStop:
        #              exec:
        #                command:
        #                - /bin/sh
        #                - /redis-shutdown/shutdown.sh
        #          livenessProbe:
        #            exec:
        #              command:
        #              - sh
        #              - -c
        #              - redis-cli -h $(hostname) -p 6379 ping --user pinger --pass pingpass --no-auth-warning
        #            failureThreshold: 6
        #            initialDelaySeconds: 30
        #            periodSeconds: 15
        #            successThreshold: 1
        #            timeoutSeconds: 5
        #          volumeMounts:
        #          - name: redis-config
        #            mountPath: /run/redis.conf
        #            subPath: redis.conf
        #          - name: redis-socket
        #            mountPath: /run/redis
        - name: nextcloud-logger
          image: docker.io/timberio/vector:0.30.0-debian
          args: ["--config", "/run/vector.yaml"] 
          env:
          - name: PROCFS_ROOT
            value: /host/proc
          - name: SYSFS_ROOT
            value: /host/sys
          - name: VECTOR_SELF_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: VECTOR_SELF_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: VECTOR_SELF_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          volumeMounts:
          - name: nextcloud-data
            mountPath: /run/nextcloud
          - name: vector-sidecar
            mountPath: /run/vector.yaml
            subPath: vector.yaml
          - name: vector-data-dir
            mountPath: /vector-data-dir
      extraInitContainers:
        - name: wait-database
          image: alpine:3.18.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              until nc -w 1 -v $MYSQL_HOST:3306 || nc -w 1 -v $POSTGRES_HOST:5432;
              do echo "Waiting for databases";
              done
          env:
            - name: POSTGRES_HOST
              value: &postgresHost defaultpg-rw.databases.svc.cluster.local
        - name: wait-redis
          image: alpine:3.18.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              # until nc -w 1 -v $REDIS_HOST:$REDIS_HOST_PORT;

              # Socket version of wait
              until nc -w 1 -lU /var/run/redis/redis.sock
              do echo "Waiting for Redis";
              done
        - name: init-db
          image: ghcr.io/onedr0p/postgres-initdb:14.8
          env:
            - name: POSTGRES_HOST
              value: *postgresHost
            - name: POSTGRES_DB
              value: &pgdbname nextcloud
            - name: POSTGRES_SUPER_PASS
              valueFrom:
                secretKeyRef:
                  name: postgres-superuser
                  key: password
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: nextcloud-config
                  key: postgres_username
            - name: POSTGRES_PASS
              valueFrom:
                secretKeyRef:
                  name: nextcloud-config
                  key: postgres_password

          #php_admin_value[opcache.enable] = 1
      phpConfigs:
        opcache.conf: |
          php_admin_value[opcache.save_comments] = 1
          php_admin_value[opcache.interned_strings_buffer] = 1000
          php_admin_value[opcache.memory_consumption] = 6144 
          php_admin_value[opcache.max_accelerated_files] = 30000
          php_admin_value[opcache.validate_timestamps] = 0
          php_admin_value[opcache.revalidate_freq] = 60
          php_admin_value[opcache.jit_buffer_size] = "200M"
          php_admin_value[opcache.jit] = tracing
          php_admin_value[memory_limit] = -1
        uploadLimit.ini: |
          upload_max_filesize = 16G
          post_max_size = 16G
          max_input_time = 3600
          max_execution_time = 3600
          default_phone_region = US
        www.conf: |
          [www]
          user = www-data
          group = www-data
          listen = 127.0.0.1:9000

          pm = dynamic
          pm.max_children = 300
          pm.start_servers = 30
          pm.min_spare_servers = 15 
          pm.max_spare_servers = 40
          pm.max_requests = 500
          pm.process_idle_timeout = 10s

      defaultConfigs:
        # To protect /var/www/html/config
        .htaccess: true
        # Redis default configuration
        redis.config.php: false
        # Apache configuration for rewrite urls
        apache-pretty-urls.config.php: true
        # Define APCu as local cache
        apcu.config.php: true
        # Apps directory configs
        apps.config.php: true
        # Used for auto configure database
        autoconfig.php: true
        # SMTP default configuration
        smtp.config.php: true
    
      configs:
        redis.config.php: |-
          <?php
            $CONFIG = array (
              'memcache.local' => '\OC\Memcache\APCu',
              'memcache.distributed' => '\OC\Memcache\Redis',
              'memcache.locking' => '\OC\Memcache\Redis',
              'redis' => [
                 'host'     => '/run/redis/redis.sock',
                 'port'     => 0,
                 'dbindex'  => 0,
                 'password' => '',
                 'timeout'  => 1.5,
            ],
          );
    
        custom.config.php: |-
          <?php
          $CONFIG = array (
            'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
            'overwriteprotocol' => 'https',
            'overwrite.cli.url' => 'https://hub.${SECRET_DEV_DOMAIN}',
            'filelocking.enabled' => 'true',
            'default_phone_region' => 'US',
            'loglevel' => '1',
            'log.condition' => [
                'apps' => ['admin_audit'],
               ],
            'log_type_audit' => "file",
            'logfile_audit' => "audit.log",
            'enable_previews' => true,
            'trusted_domains' =>
               [
                'nextcloud',
                'hub.${SECRET_DEV_DOMAIN}',
               ],
            'trusted_proxies' => array(
               0 => '127.0.0.1',
               1 => '10.0.0.0/8',
               2 => '192.168.12.10',
               ),
            'enabledPreviewProviders' =>
               [
                'OC\\Preview\\TIFF',
                'OC\\Preview\\TXT',
                'OC\\Preview\\MarkDown',
                'OC\\Preview\\PDF',
                'OC\\Preview\\MSOfficeDoc',
                'OC\\Preview\\JPEG',
                'OC\\Preview\\PNG',
                'OC\\Preview\\GIF',
                'OC\\Preview\\BMP',
                'OC\\Preview\\XBitmap',
                'OC\\Preview\\MP3',
                'OC\\Preview\\HEIC',
                'OC\\Preview\\Movie',
                'OC\\Preview\\MKV',
                'OC\\Preview\\MP4',
                'OC\\Preview\\AVI',
                'OC\\Preview\\MP3',
                'OC\\Preview\\OpenDocument',
                'OC\\Preview\\Krita',
                'OC\\Preview\\Imaginary',
              ],
            'preview_imaginary_url' => 'http://imaginary.media.svc.cluster.local:9000',
          );

      extraVolumes:
        - name: redis-socks
          persistentVolumeClaim:
            claimName: redis-socks-pvc
        - name: vector-sidecar
          configMap:
            name: vector-sidecar
        - name: vector-data-dir
          emptyDir: {}
            #        - name: redis-config
            #          configMap:
            #            name: redis-config
            #        - name: redis-socket
            #          emptyDir: 
            #            medium: Memory
            #            sizeLimit: 500Mi
      extraVolumeMounts:
        - name: redis-socks
          mountPath: /run/redis
        - name: vector-sidecar
          mountPath: "/run/vector.yaml"
          subPath: "vector.yaml"
        - name: vector-data-dir
          mountPath: /vector-data-dir
            #        - name: redis-socket
            #          mountPath: /run/redis/


            # extraSecurityContext:
            #   runAsUser: "33"
            #   runAsGroup: "33"
            #   runAsNonRoot: true
            #   fsGroup: 33
            #   readOnlyRootFilesystem: true

    nginx:
      enabled: true
      image:
        repository: nginx
        tag: 1.25-alpine

    internalDatabase:
      enabled: false

    externalDatabase:
      enabled: true
      type: postgresql
      host: *postgresHost
      database: *pgdbname
      existingSecret:
        enabled: true
        secretName: nextcloud-config
        usernameKey: postgres_username
        passwordKey: postgres_password

    cronjob:
      enabled: true
      schedule: "*/5 * * * *"
      curlInsecure: false
      failedJobsHistoryLimit: 5
      successfulJobsHistoryLimit: 2

    persistence:
      enabled: true
      existingClaim: nextcloud-config
      
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-nfs

    ## Liveness and readiness probe values
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
    ##
    livenessProbe:
      enabled: false
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      enabled: false
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    startupProbe:
      enabled: true
      initialDelaySeconds: 1920
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1

    affinity:
      podAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                    - nextcloud
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - redis
            topologyKey: kubernetes.io/hostname
            namespaces:
              - storage

    ## Prometheus Exporter / Metrics
    ##
    metrics:
      enabled: true
      replicaCount: 1
      https: true
      # Use API token if set, otherwise fall back to password authentication
      # https://github.com/xperimental/nextcloud-exporter#token-authentication
      # Currently you still need to set the token manually in your nextcloud install
        # # Generate random value (for example using openssl)
        # TOKEN=$(openssl rand -hex 32)
        # # Set token (using the occ console application)
        # occ config:app:set serverinfo token --value "$TOKEN"
        # # Set token value in `nextcloud.existingSecret` as `nextcloud-token`
      token: "true"
      timeout: 5s
      # if set to true, exporter skips certificate verification of Nextcloud server.
      tlsSkipVerify: false

      ## Prometheus Operator ServiceMonitor configuration
      ##
      serviceMonitor:
        enabled: false
        namespace: "storage"
        path: "/metrics"
        ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
        jobLabel: ""
        interval: 1m
        scrapeTimeout: 10s
        labels: {}

    nodeSelector:
      node-role.kubernetes.io/worker: "true"
            
#    resources:
#      requests:
#        cpu: 34m
#        memory: 203Mi
#      limits:
#        memory: 363Mi
